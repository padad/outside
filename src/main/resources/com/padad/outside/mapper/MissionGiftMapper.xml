<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.padad.outside.mapper.MissionGiftMapper" >
  <resultMap id="BaseResultMap" type="com.padad.outside.pojo.MissionGift" >
    <id column="gift_id" property="giftId" jdbcType="VARCHAR" />
    <result column="gift_title" property="giftTitle" jdbcType="VARCHAR" />
    <result column="gift_price" property="giftPrice" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="active" property="active" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.padad.outside.pojo.MissionGift" extends="BaseResultMap" >
    <result column="desc" property="desc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gift_id, gift_title, gift_price, type, quantity, active
  </sql>
  <sql id="Blob_Column_List" >
    desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.padad.outside.pojo.MissionGiftExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mission_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.padad.outside.pojo.MissionGiftExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mission_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mission_gift
    where gift_id = #{giftId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from mission_gift
    where gift_id = #{giftId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.padad.outside.pojo.MissionGiftExample" >
    delete from mission_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.padad.outside.pojo.MissionGift" >
    insert into mission_gift (gift_id, gift_title, gift_price, 
      type, quantity, active, 
      desc)
    values (#{giftId,jdbcType=VARCHAR}, #{giftTitle,jdbcType=VARCHAR}, #{giftPrice,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{active,jdbcType=INTEGER}, 
      #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.padad.outside.pojo.MissionGift" >
    insert into mission_gift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="giftId != null" >
        gift_id,
      </if>
      <if test="giftTitle != null" >
        gift_title,
      </if>
      <if test="giftPrice != null" >
        gift_price,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="desc != null" >
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="giftId != null" >
        #{giftId,jdbcType=VARCHAR},
      </if>
      <if test="giftTitle != null" >
        #{giftTitle,jdbcType=VARCHAR},
      </if>
      <if test="giftPrice != null" >
        #{giftPrice,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="active != null" >
        #{active,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.padad.outside.pojo.MissionGiftExample" resultType="java.lang.Integer" >
    select count(*) from mission_gift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mission_gift
    <set >
      <if test="record.giftId != null" >
        gift_id = #{record.giftId,jdbcType=VARCHAR},
      </if>
      <if test="record.giftTitle != null" >
        gift_title = #{record.giftTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.giftPrice != null" >
        gift_price = #{record.giftPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.active != null" >
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.desc != null" >
        desc = #{record.desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update mission_gift
    set gift_id = #{record.giftId,jdbcType=VARCHAR},
      gift_title = #{record.giftTitle,jdbcType=VARCHAR},
      gift_price = #{record.giftPrice,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      active = #{record.active,jdbcType=INTEGER},
      desc = #{record.desc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mission_gift
    set gift_id = #{record.giftId,jdbcType=VARCHAR},
      gift_title = #{record.giftTitle,jdbcType=VARCHAR},
      gift_price = #{record.giftPrice,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      active = #{record.active,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.padad.outside.pojo.MissionGift" >
    update mission_gift
    <set >
      <if test="giftTitle != null" >
        gift_title = #{giftTitle,jdbcType=VARCHAR},
      </if>
      <if test="giftPrice != null" >
        gift_price = #{giftPrice,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="active != null" >
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where gift_id = #{giftId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.padad.outside.pojo.MissionGift" >
    update mission_gift
    set gift_title = #{giftTitle,jdbcType=VARCHAR},
      gift_price = #{giftPrice,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      active = #{active,jdbcType=INTEGER},
      desc = #{desc,jdbcType=LONGVARCHAR}
    where gift_id = #{giftId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.padad.outside.pojo.MissionGift" >
    update mission_gift
    set gift_title = #{giftTitle,jdbcType=VARCHAR},
      gift_price = #{giftPrice,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      active = #{active,jdbcType=INTEGER}
    where gift_id = #{giftId,jdbcType=VARCHAR}
  </update>
</mapper>